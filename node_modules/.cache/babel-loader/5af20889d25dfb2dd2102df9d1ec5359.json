{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijivasenko/Desktop/RS-School/projects/currency-exchange/src/components/popup.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListItems extends Component {\n  render() {\n    const {\n      content\n    } = this.props;\n    if (content == null) return;\n    return content.map(item => {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        className: \"popup__list-item\",\n        children: `${item.date}: ${item.value}`\n      }, item.date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n}\n\nclass Popup extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      content: [],\n      visibility: false\n    };\n    this.lastData = [];\n  }\n\n  co() {\n    this.setState({\n      visibility: this.props.visibility\n    });\n    console.log(this.state);\n    this.fetchPreviousData(1);\n\n    if (this.state.visibility) {\n      this.fillPopup(this.props.name);\n    }\n  }\n\n  fillPopup(name) {\n    const previousCurrency = [];\n    this.lastData.forEach(item => {\n      const contentInfo = {\n        date: item.date,\n        currency: item.currency[name].Value\n      };\n      previousCurrency.push(contentInfo);\n    });\n    this.setState({\n      content: previousCurrency\n    }); // console.log(this.lastData, content)\n  }\n\n  fetchPreviousData(i) {\n    const today = Date.now();\n    let yesterday = today - i * 86400000;\n    const date = new Date(yesterday);\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    month = month > 10 ? month : `0${month}`;\n    let day = date.getDate();\n    day = day > 10 ? day : `0${day}`;\n    let BASE_PATH = `https://www.cbr-xml-daily.ru/archive/${year}/${month}/${day}/daily_json.js`;\n    fetch(BASE_PATH).then(res => res.json()).then(result => {\n      const info = {\n        date: result.Date,\n        currency: result.Valute\n      };\n      this.lastData.push(info);\n\n      if (this.lastData.length < 11) {\n        this.fetchPreviousData(i + 1);\n      } else {\n        return;\n      }\n    }).catch(error => {\n      if (error) {\n        console.log(`No data for ${date}`);\n        this.fetchPreviousData(i + 1);\n      }\n    });\n  }\n\n  render() {\n    const {\n      visibility,\n      content\n    } = this.state;\n\n    if (visibility) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"popup__list\",\n            children: /*#__PURE__*/_jsxDEV(ListItems, {\n              content: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Popup;","map":{"version":3,"sources":["/Users/dmitrijivasenko/Desktop/RS-School/projects/currency-exchange/src/components/popup.jsx"],"names":["React","Component","Fragment","PropTypes","ListItems","render","content","props","map","item","date","value","Popup","state","visibility","lastData","co","setState","console","log","fetchPreviousData","fillPopup","name","previousCurrency","forEach","contentInfo","currency","Value","push","i","today","Date","now","yesterday","year","getFullYear","month","getMonth","day","getDate","BASE_PATH","fetch","then","res","json","result","info","Valute","length","catch","error"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/popup.css';\n\nclass ListItems extends Component {\n  render() {\n    const { content } = this.props;\n    if (content == null) return;\n    return content.map((item) => {\n      <li\n        className=\"popup__list-item\"\n        key={item.date}\n      >{`${item.date}: ${item.value}`}</li>;\n    });\n  }\n}\n\nclass Popup extends Component {\n  state = {\n    content: [],\n    visibility: false,\n  };\n\n  lastData = [];\n\n    co() {\n    this.setState({visibility: this.props.visibility});\n    console.log(this.state)\n    this.fetchPreviousData(1);\n    if (this.state.visibility) {\n      this.fillPopup(this.props.name);\n    }\n  }\n\n  fillPopup(name) {\n    const previousCurrency = [];\n    this.lastData.forEach((item) => {\n      const contentInfo = {\n        date: item.date,\n        currency: item.currency[name].Value,\n      };\n      previousCurrency.push(contentInfo);\n    });\n    this.setState({ content: previousCurrency });\n    // console.log(this.lastData, content)\n  }\n\n  fetchPreviousData(i) {\n    const today = Date.now();\n    let yesterday = today - i * 86400000;\n    const date = new Date(yesterday);\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    month = month > 10 ? month : `0${month}`;\n    let day = date.getDate();\n    day = day > 10 ? day : `0${day}`;\n    let BASE_PATH = `https://www.cbr-xml-daily.ru/archive/${year}/${month}/${day}/daily_json.js`;\n\n    fetch(BASE_PATH)\n      .then((res) => res.json())\n      .then((result) => {\n        const info = {\n          date: result.Date,\n          currency: result.Valute,\n        };\n        this.lastData.push(info);\n        if (this.lastData.length < 11) {\n          this.fetchPreviousData(i + 1);\n        } else {\n          return;\n        }\n      })\n      .catch((error) => {\n        if (error) {\n          console.log(`No data for ${date}`);\n          this.fetchPreviousData(i + 1);\n        }\n      });\n  }\n\n  render() {\n    const { visibility, content } = this.state;\n    if (visibility) {\n      return (\n        <Fragment>\n          <div className=\"popup\">\n            <ul className=\"popup__list\">\n              <ListItems content={content} />\n            </ul>\n          </div>\n        </Fragment>\n      );\n    }\n    return <div></div>\n  }\n}\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}