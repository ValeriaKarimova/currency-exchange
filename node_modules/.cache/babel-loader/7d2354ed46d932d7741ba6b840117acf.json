{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijivasenko/Desktop/RS-School/projects/currency-exchange/src/components/popup.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport '../styles/popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListItems extends Component {\n  render() {\n    const {\n      content\n    } = this.props;\n    return content.map(item => {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        className: \"popup__list-item\",\n        children: `${item.date}: ${item.value}`\n      }, item.date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n}\n\nclass Popup extends Component {\n  constructor() {\n    super(...arguments);\n    this.lastData = [];\n  }\n\n  componentDidMount() {\n    this.fetchPreviousData(1);\n\n    if (this.props.isVisible) {\n      this.showPopup();\n    }\n  }\n\n  showPopup(name) {\n    const content = [];\n    this.lastData.forEach(item => {\n      const contentInfo = {\n        date: item.date,\n        currency: item.currency[name].Value\n      };\n      content.push(contentInfo);\n    });\n    console.log(this.lastData, content);\n  }\n\n  fetchPreviousData(i) {\n    const today = Date.now();\n    let yesterday = today - i * 86400000;\n    const date = new Date(yesterday);\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    month = month > 10 ? month : `0${month}`;\n    let day = date.getDate();\n    day = day > 10 ? day : `0${day}`;\n    let BASE_PATH = `https://www.cbr-xml-daily.ru/archive/${year}/${month}/${day}/daily_json.js`;\n    fetch(BASE_PATH).then(res => res.json()).then(result => {\n      const info = {\n        date: result.Date,\n        currency: result.Valute\n      };\n      this.lastData.push(info);\n\n      if (this.lastData.length < 11) {\n        this.fetchPreviousData(i + 1);\n      } else {\n        return;\n      }\n    }).catch(error => {\n      if (error) {\n        console.log(`No data for ${date}`);\n        this.fetchPreviousData(i + 1);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"popup__list\",\n          children: /*#__PURE__*/_jsxDEV(ListItems, {\n            content: this.props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Popup;","map":{"version":3,"sources":["/Users/dmitrijivasenko/Desktop/RS-School/projects/currency-exchange/src/components/popup.jsx"],"names":["React","Component","Fragment","PropTypes","ListItems","render","content","props","map","item","date","value","Popup","lastData","componentDidMount","fetchPreviousData","isVisible","showPopup","name","forEach","contentInfo","currency","Value","push","console","log","i","today","Date","now","yesterday","year","getFullYear","month","getMonth","day","getDate","BASE_PATH","fetch","then","res","json","result","info","Valute","length","catch","error"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\nimport PropTypes from 'prop-types';\nimport '../styles/popup.css';\n\nclass ListItems extends Component {\n    render() {\n        const { content } = this.props;\n        return content.map(item => {\n            <li className=\"popup__list-item\" key={item.date}>{`${item.date}: ${item.value}`}</li>\n        })\n\n    }\n\n}\n\nclass Popup extends Component {\n    lastData = [];\n\n    componentDidMount() {\n      this.fetchPreviousData(1);\n      if (this.props.isVisible) {\n          this.showPopup()\n      }\n    }\n\n    showPopup(name) {\n        const content = [];\n        this.lastData.forEach(item => {\n          const contentInfo = {\n            date: item.date,\n            currency: item.currency[name].Value,\n          }\n          content.push(contentInfo);\n        })\n        console.log(this.lastData, content)\n      }\n  \n    fetchPreviousData(i) {\n      const today = Date.now();\n      let yesterday = today - (i * 86400000);\n      const date = new Date(yesterday);\n      const year = date.getFullYear();\n      let month = date.getMonth() + 1;\n      month = month > 10 ? month : `0${month}`;\n      let day = date.getDate();\n      day = day > 10 ? day : `0${day}`;\n      let BASE_PATH = `https://www.cbr-xml-daily.ru/archive/${year}/${month}/${day}/daily_json.js`;\n      \n      fetch(BASE_PATH)\n      .then((res) => res.json())\n      .then((result) => {\n        const info = {\n          date: result.Date,\n          currency: result.Valute\n        }\n        this.lastData.push(info)\n        if (this.lastData.length < 11) {\n            this.fetchPreviousData(i+1)\n          } else {\n            return;\n          }\n        })\n        .catch((error => {\n          if (error) {\n            console.log(`No data for ${date}`);\n            this.fetchPreviousData(i+1)\n          }\n        }))\n    }\n\n    render() {\n        return <Fragment>\n            <div className=\"popup\">\n                <ul className=\"popup__list\">\n                <ListItems content={this.props}/>\n                </ul>\n            </div>\n        </Fragment>\n    }\n\n}\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}