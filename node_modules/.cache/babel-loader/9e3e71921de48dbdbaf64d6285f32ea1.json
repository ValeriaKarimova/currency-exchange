{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijivasenko/Desktop/RS-School/projects/currency-exchange/src/components/list.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport '../styles/list.css';\nimport Popup from './popup';\nimport Tooltip from './tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Difference(props) {\n  let name = 'increase';\n\n  if (props.currentValue < props.previousValue) {\n    name = 'decrease';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: name,\n    children: ((props.currentValue - props.previousValue) / props.previousValue * 100).toFixed(2) + '%'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Difference;\n\nclass ListItems extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showPopup: false\n    };\n    this.lastData = [];\n  }\n\n  componentDidMount() {\n    this.fetchPreviousData(1);\n  }\n\n  fetchPreviousData(i) {\n    const today = Date.now();\n    let yesterday = today - i * 86400000;\n    const date = new Date(yesterday);\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    month = month > 10 ? month : `0${month}`;\n    let day = date.getDate();\n    day = day > 10 ? day : `0${day}`;\n    let BASE_PATH = `https://www.cbr-xml-daily.ru/archive/${year}/${month}/${day}/daily_json.js`;\n    fetch(BASE_PATH).then(res => res.json()).then(result => {\n      const info = {\n        date: result.Date,\n        currency: result.Valute\n      };\n      this.lastData.push(info);\n\n      if (this.lastData.length < 11) {\n        this.fetchPreviousData(i + 1);\n      } else {\n        return;\n      }\n    }).catch(error => {\n      if (error) {\n        console.log(`No data for ${date}`);\n        this.fetchPreviousData(i + 1);\n      }\n    });\n  }\n\n  showPopup(name) {\n    const content = [];\n    this.lastData.forEach(item => {\n      const contentInfo = {\n        date: item.date,\n        currency: item.currency[name].Value\n      };\n      content.push(contentInfo);\n    });\n    console.log(this.lastData, content);\n    this.setState({\n      showPopup: true\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.props;\n    const dataArr = Object.keys(data);\n    return;\n  }\n\n}\n\nclass List extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: /*#__PURE__*/_jsxDEV(ListItems, {\n        data: this.props.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ListContainer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const BASE_PATH = 'https://www.cbr-xml-daily.ru/daily_json.js';\n    fetch(BASE_PATH).then(res => res.json()).then(result => this.setState({\n      data: result.Valute\n    })).catch(error => error);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Difference\");","map":{"version":3,"sources":["/Users/dmitrijivasenko/Desktop/RS-School/projects/currency-exchange/src/components/list.jsx"],"names":["React","Component","Fragment","Popup","Tooltip","Difference","props","name","currentValue","previousValue","toFixed","ListItems","state","showPopup","lastData","componentDidMount","fetchPreviousData","i","today","Date","now","yesterday","date","year","getFullYear","month","getMonth","day","getDate","BASE_PATH","fetch","then","res","json","result","info","currency","Valute","push","length","catch","error","console","log","content","forEach","item","contentInfo","Value","setState","render","data","dataArr","Object","keys","List","ListContainer","fetchData"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport '../styles/list.css';\nimport Popup from './popup';\nimport Tooltip from './tooltip';\n\nfunction Difference(props) {\n  let name = 'increase';\n  if (props.currentValue < props.previousValue) {\n    name = 'decrease';\n  }\n  return (\n    <span className={name}>\n      {(\n        ((props.currentValue - props.previousValue) / props.previousValue) *\n        100\n      ).toFixed(2) + '%'}\n    </span>\n  );\n}\n\nclass ListItems extends Component {\n\n  state = {showPopup: false};\n\n  lastData = [];\n\n  componentDidMount() {\n    this.fetchPreviousData(1);\n  }\n\n  fetchPreviousData(i) {\n    const today = Date.now();\n    let yesterday = today - (i * 86400000);\n    const date = new Date(yesterday);\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    month = month > 10 ? month : `0${month}`;\n    let day = date.getDate();\n    day = day > 10 ? day : `0${day}`;\n    let BASE_PATH = `https://www.cbr-xml-daily.ru/archive/${year}/${month}/${day}/daily_json.js`;\n    \n    fetch(BASE_PATH)\n    .then((res) => res.json())\n    .then((result) => {\n      const info = {\n        date: result.Date,\n        currency: result.Valute\n      }\n      this.lastData.push(info)\n      if (this.lastData.length < 11) {\n          this.fetchPreviousData(i+1)\n        } else {\n          return;\n        }\n      })\n      .catch((error => {\n        if (error) {\n          console.log(`No data for ${date}`);\n          this.fetchPreviousData(i+1)\n        }\n      }))\n  }\n\n  showPopup(name) {\n    const content = [];\n    this.lastData.forEach(item => {\n      const contentInfo = {\n        date: item.date,\n        currency: item.currency[name].Value,\n      }\n      content.push(contentInfo);\n    })\n    console.log(this.lastData, content)\n    this.setState({showPopup: true})\n  }\n\n  render() {\n    const { data } = this.props;\n    const dataArr = Object.keys(data);\n    return \n  }\n}\n\nclass List extends Component {\n  render() {\n    return (\n      <ul className=\"list\">\n        <ListItems data={this.props.data} />\n      </ul>\n    );\n  }\n}\n\nclass ListContainer extends Component {\n  state = {\n    data: {},\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const BASE_PATH = 'https://www.cbr-xml-daily.ru/daily_json.js';\n\n    fetch(BASE_PATH)\n      .then((res) => res.json())\n      .then((result) => this.setState({ data: result.Valute }))\n      .catch((error) => error);\n  }\n\n  render() {\n    return (\n      <main className=\"main\">\n        <List data={this.state.data} />\n      </main>\n    );\n  }\n}\n\nexport default ListContainer;\n"]},"metadata":{},"sourceType":"module"}