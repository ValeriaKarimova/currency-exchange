{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrijivasenko/Desktop/RS-School/projects/currency-exchange/src/components/list.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport '../styles/list.css';\nimport Tooltip from './tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Difference(props) {\n  let name = 'increase';\n\n  if (props.currentValue < props.previousValue) {\n    name = 'decrease';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: name,\n    children: ((props.currentValue - props.previousValue) / props.previousValue * 100).toFixed(2) + '%'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Difference;\n\nclass ListItems extends Component {\n  render() {\n    const {\n      data\n    } = this.props;\n    const dataArr = Object.keys(data);\n    return dataArr.map(elem => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list__item\",\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        content: data[elem].Name,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"code\",\n          children: data[elem].CharCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Math.round(data[elem].Value).toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Difference, {\n        currentValue: data[elem].Value,\n        previousValue: data[elem].Previous\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, data[elem].CharCode, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }\n\n}\n\nclass List extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: /*#__PURE__*/_jsxDEV(ListItems, {\n        data: this.props.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ListContainer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchPreviousData() {\n    const today = Date.now();\n    let yesterday = today - 86400000;\n\n    for (let i = 0; i <= 10; i++) {\n      if (i > 0) {\n        yesterday -= 86400000;\n      }\n\n      const date = new Date(yesterday);\n      const year = date.getFullYear();\n      const month = date.getMonth() + 1;\n      const day = date.getDate();\n      let BASE_PATH = `https://www.cbr-xml-daily.ru/archive/${year}/${month}/${day}/daily_json.js`;\n    }\n  }\n\n  fetchData() {\n    const BASE_PATH = 'https://www.cbr-xml-daily.ru/daily_json.js';\n    fetch(BASE_PATH).then(res => res.json()).then(result => this.setState({\n      data: result.Valute\n    })).catch(error => error);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Difference\");","map":{"version":3,"sources":["/Users/dmitrijivasenko/Desktop/RS-School/projects/currency-exchange/src/components/list.jsx"],"names":["React","Component","Fragment","Tooltip","Difference","props","name","currentValue","previousValue","toFixed","ListItems","render","data","dataArr","Object","keys","map","elem","Name","CharCode","Math","round","Value","Previous","List","ListContainer","state","componentDidMount","fetchData","fetchPreviousData","today","Date","now","yesterday","i","date","year","getFullYear","month","getMonth","day","getDate","BASE_PATH","fetch","then","res","json","result","setState","Valute","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,IAAI,GAAG,UAAX;;AACA,MAAID,KAAK,CAACE,YAAN,GAAqBF,KAAK,CAACG,aAA/B,EAA8C;AAC5CF,IAAAA,IAAI,GAAG,UAAP;AACD;;AACD,sBACE;AAAM,IAAA,SAAS,EAAEA,IAAjB;AAAA,cACG,CACE,CAACD,KAAK,CAACE,YAAN,GAAqBF,KAAK,CAACG,aAA5B,IAA6CH,KAAK,CAACG,aAApD,GACA,GAFD,EAGCC,OAHD,CAGS,CAHT,IAGc;AAJjB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAbQL,U;;AAeT,MAAMM,SAAN,SAAwBT,SAAxB,CAAkC;AAChCU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKP,KAAtB;AACA,UAAMQ,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAhB;AACA,WAAOC,OAAO,CAACG,GAAR,CAAaC,IAAD,iBACjB;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEL,IAAI,CAACK,IAAD,CAAJ,CAAWC,IAA7B;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,oBAAwBN,IAAI,CAACK,IAAD,CAAJ,CAAWE;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBAAOC,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACK,IAAD,CAAJ,CAAWK,KAAtB,EAA6Bb,OAA7B,CAAqC,CAArC;AAAP;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,UAAD;AACE,QAAA,YAAY,EAAEG,IAAI,CAACK,IAAD,CAAJ,CAAWK,KAD3B;AAEE,QAAA,aAAa,EAAEV,IAAI,CAACK,IAAD,CAAJ,CAAWM;AAF5B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAgCX,IAAI,CAACK,IAAD,CAAJ,CAAWE,QAA3C;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAYD;;AAhB+B;;AAmBlC,MAAMK,IAAN,SAAmBvB,SAAnB,CAA6B;AAC3BU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAP0B;;AAU7B,MAAMa,aAAN,SAA4BxB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCyB,KADoC,GAC5B;AACNd,MAAAA,IAAI,EAAE;AADA,KAD4B;AAAA;;AAKpCe,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAd;AACA,QAAIC,SAAS,GAAGH,KAAK,GAAG,QAAxB;;AAEA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,UAAIA,CAAC,GAAG,CAAR,EAAW;AACTD,QAAAA,SAAS,IAAI,QAAb;AACD;;AACD,YAAME,IAAI,GAAG,IAAIJ,IAAJ,CAASE,SAAT,CAAb;AACA,YAAMG,IAAI,GAAGD,IAAI,CAACE,WAAL,EAAb;AACA,YAAMC,KAAK,GAAGH,IAAI,CAACI,QAAL,KAAkB,CAAhC;AACA,YAAMC,GAAG,GAAGL,IAAI,CAACM,OAAL,EAAZ;AACA,UAAIC,SAAS,GAAI,wCAAuCN,IAAK,IAAGE,KAAM,IAAGE,GAAI,gBAA7E;AAGD;AACF;;AAEDZ,EAAAA,SAAS,GAAG;AACV,UAAMc,SAAS,GAAG,4CAAlB;AAEAC,IAAAA,KAAK,CAACD,SAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,MAAD,IAAY,KAAKC,QAAL,CAAc;AAAEpC,MAAAA,IAAI,EAAEmC,MAAM,CAACE;AAAf,KAAd,CAFpB,EAGGC,KAHH,CAGUC,KAAD,IAAWA,KAHpB;AAID;;AAEDxC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKe,KAAL,CAAWd;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA1CmC;;AA6CtC,eAAea,aAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport '../styles/list.css';\nimport Tooltip from './tooltip';\n\nfunction Difference(props) {\n  let name = 'increase';\n  if (props.currentValue < props.previousValue) {\n    name = 'decrease';\n  }\n  return (\n    <span className={name}>\n      {(\n        ((props.currentValue - props.previousValue) / props.previousValue) *\n        100\n      ).toFixed(2) + '%'}\n    </span>\n  );\n}\n\nclass ListItems extends Component {\n  render() {\n    const { data } = this.props;\n    const dataArr = Object.keys(data);\n    return dataArr.map((elem) => (\n      <li className=\"list__item\" key={data[elem].CharCode}>\n        <Tooltip content={data[elem].Name}>\n          <span className=\"code\">{data[elem].CharCode}</span>\n        </Tooltip>\n        <span>{Math.round(data[elem].Value).toFixed(2)}</span>\n        <Difference\n          currentValue={data[elem].Value}\n          previousValue={data[elem].Previous}\n        />\n      </li>\n    ));\n  }\n}\n\nclass List extends Component {\n  render() {\n    return (\n      <ul className=\"list\">\n        <ListItems data={this.props.data} />\n      </ul>\n    );\n  }\n}\n\nclass ListContainer extends Component {\n  state = {\n    data: {},\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchPreviousData() {\n    const today = Date.now();\n    let yesterday = today - 86400000;\n\n    for (let i = 0; i <= 10; i++) {\n      if (i > 0) {\n        yesterday -= 86400000;\n      }\n      const date = new Date(yesterday);\n      const year = date.getFullYear();\n      const month = date.getMonth() + 1;\n      const day = date.getDate();\n      let BASE_PATH = `https://www.cbr-xml-daily.ru/archive/${year}/${month}/${day}/daily_json.js`;\n\n      \n    }\n  }\n\n  fetchData() {\n    const BASE_PATH = 'https://www.cbr-xml-daily.ru/daily_json.js';\n\n    fetch(BASE_PATH)\n      .then((res) => res.json())\n      .then((result) => this.setState({ data: result.Valute }))\n      .catch((error) => error);\n  }\n\n  render() {\n    return (\n      <main className=\"main\">\n        <List data={this.state.data} />\n      </main>\n    );\n  }\n}\n\nexport default ListContainer;\n"]},"metadata":{},"sourceType":"module"}